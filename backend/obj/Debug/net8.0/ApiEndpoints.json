[
  {
    "ContainingType": "Minik.Server.Controllers.ReportsController",
    "Method": "GetMonthlyReservations",
    "RelativePath": "api/admin/reports/monthly-reservations",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Minik.Server.Controllers.ReportsController",
    "Method": "GetMonthlyUsers",
    "RelativePath": "api/admin/reports/monthly-users",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Minik.Server.Controllers.ReportsController",
    "Method": "GetSummary",
    "RelativePath": "api/admin/reports/summary",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Minik.Server.Controllers.ReportsController",
    "Method": "GetTopTinyHouses",
    "RelativePath": "api/admin/reports/top-tinyhouses",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Minik.Server.Controllers.AuditLogController",
    "Method": "AddLog",
    "RelativePath": "api/AuditLog",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "log",
        "Type": "backend.Models.AuditLog",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Minik.Server.Controllers.AuditLogController",
    "Method": "GetLogs",
    "RelativePath": "api/AuditLog",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Minik.Server.Controllers.AvailabilityController",
    "Method": "GetAllAvailability",
    "RelativePath": "api/Availability",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Minik.Server.Controllers.AvailabilityController",
    "Method": "AddAvailability",
    "RelativePath": "api/Availability",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "availability",
        "Type": "backend.Models.Availability",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Minik.Server.Controllers.AvailabilityController",
    "Method": "UpdateAvailability",
    "RelativePath": "api/Availability/{id}",
    "HttpMethod": "PATCH",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "updatedFields",
        "Type": "System.Text.Json.JsonElement",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Minik.Server.Controllers.AvailabilityController",
    "Method": "DeleteAvailability",
    "RelativePath": "api/Availability/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Minik.Server.Controllers.AvailabilityController",
    "Method": "GetActiveAvailability",
    "RelativePath": "api/Availability/active",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Minik.Server.Controllers.AvailabilityController",
    "Method": "GetAvailableInRange",
    "RelativePath": "api/Availability/filter",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "from",
        "Type": "System.DateTime",
        "IsRequired": false
      },
      {
        "Name": "to",
        "Type": "System.DateTime",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Minik.Server.Controllers.AvailabilityController",
    "Method": "GetByTinyHouseId",
    "RelativePath": "api/Availability/tinyhouse/{tinyHouseId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "tinyHouseId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Minik.Server.Controllers.DiscountsController",
    "Method": "GetAllDiscounts",
    "RelativePath": "api/Discounts",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Minik.Server.Controllers.DiscountsController",
    "Method": "GetDiscountByTinyHouseId",
    "RelativePath": "api/Discounts/tinyhouse/{tinyHouseId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "tinyHouseId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Minik.Server.Controllers.DiscountsController",
    "Method": "UpdateDiscountPercentage",
    "RelativePath": "api/Discounts/tinyhouse/{tinyHouseId}",
    "HttpMethod": "PATCH",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "tinyHouseId",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "newPercentage",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Minik.Server.Controllers.DiscountsController",
    "Method": "UpsertDiscount",
    "RelativePath": "api/Discounts/tinyhouse/{tinyHouseId}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "tinyHouseId",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "discount",
        "Type": "backend.Models.Discount",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Minik.Server.Controllers.DiscountsController",
    "Method": "DeleteDiscount",
    "RelativePath": "api/Discounts/tinyhouse/{tinyHouseId}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "tinyHouseId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Minik.Server.Controllers.HouseImagesController",
    "Method": "GetHouseImages",
    "RelativePath": "api/HouseImages",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[backend.Models.HouseImages, backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "Minik.Server.Controllers.HouseImagesController",
    "Method": "DeleteImage",
    "RelativePath": "api/HouseImages/{imageId}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "imageId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Minik.Server.Controllers.HouseImagesController",
    "Method": "GetHouseImagesByTinyHouseId",
    "RelativePath": "api/HouseImages/{tiny_house_id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "tiny_house_id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[backend.Models.HouseImages, backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "Minik.Server.Controllers.HouseImagesController",
    "Method": "AddImageToTinyHouse",
    "RelativePath": "api/HouseImages/{tinyHouseId}",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "tinyHouseId",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "dto",
        "Type": "backend.Models.HouseImagesDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Minik.Server.Controllers.LocationsController",
    "Method": "GetLocations",
    "RelativePath": "api/Locations",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[backend.Models.Location, backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "Minik.Server.Controllers.LocationsController",
    "Method": "AddLocation",
    "RelativePath": "api/Locations",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "location",
        "Type": "backend.Models.Location",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Minik.Server.Controllers.LocationsController",
    "Method": "GetLocation",
    "RelativePath": "api/Locations/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "backend.Models.Location",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "Minik.Server.Controllers.LocationsController",
    "Method": "DeleteLocation",
    "RelativePath": "api/Locations/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Minik.Server.Controllers.LocationsController",
    "Method": "UpdateLocation",
    "RelativePath": "api/Locations/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "location",
        "Type": "backend.Models.Location",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Minik.Server.Controllers.LocationsController",
    "Method": "GetLocationsByPropertyOwnerId",
    "RelativePath": "api/Locations/propertyowner/{property_owner_id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "property_owner_id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[backend.Models.Location, backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "Minik.Server.Controllers.LocationsController",
    "Method": "GetLocationByTinyHouseId",
    "RelativePath": "api/Locations/tinyhouse/{tinyhouse_id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "tinyhouse_id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "backend.Models.Location",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "backend.Controllers.LoginController",
    "Method": "Login",
    "RelativePath": "api/Login/login",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "loginRequest",
        "Type": "backend.Models.Login",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Minik.Server.Controllers.MaintenanceController",
    "Method": "GetAllMaintenance",
    "RelativePath": "api/Maintenance",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Minik.Server.Controllers.MaintenanceController",
    "Method": "AddMaintenance",
    "RelativePath": "api/Maintenance",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "maintenance",
        "Type": "backend.Models.Maintenance",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Minik.Server.Controllers.MaintenanceController",
    "Method": "GetMaintenanceById",
    "RelativePath": "api/Maintenance/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Minik.Server.Controllers.MaintenanceController",
    "Method": "DeleteMaintenance",
    "RelativePath": "api/Maintenance/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Minik.Server.Controllers.MaintenanceController",
    "Method": "UpdateMaintenance",
    "RelativePath": "api/Maintenance/{id}",
    "HttpMethod": "PATCH",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "updatedFields",
        "Type": "System.Text.Json.JsonElement",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Minik.Server.Controllers.MaintenanceController",
    "Method": "GetMaintenanceByTinyHouseId",
    "RelativePath": "api/Maintenance/tinyhouse/{tinyHouseId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "tinyHouseId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Minik.Server.Controllers.NotificationsController",
    "Method": "AddNotification",
    "RelativePath": "api/Notifications",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "notification",
        "Type": "backend.Models.Notification",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Minik.Server.Controllers.NotificationsController",
    "Method": "DeleteNotification",
    "RelativePath": "api/Notifications/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Minik.Server.Controllers.NotificationsController",
    "Method": "MarkAsRead",
    "RelativePath": "api/Notifications/read/{id}",
    "HttpMethod": "PATCH",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Minik.Server.Controllers.NotificationsController",
    "Method": "GetUserNotifications",
    "RelativePath": "api/Notifications/user/{userId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "userId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "PaymentsController",
    "Method": "GetAllPayments",
    "RelativePath": "api/Payments",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "PaymentsController",
    "Method": "AddPayment",
    "RelativePath": "api/Payments",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "payment",
        "Type": "backend.Models.Payment",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "PaymentsController",
    "Method": "UpdatePaymentStatus",
    "RelativePath": "api/Payments/{id}",
    "HttpMethod": "PATCH",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "payment",
        "Type": "backend.Models.Payment",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "PaymentsController",
    "Method": "DeletePayment",
    "RelativePath": "api/Payments/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "PaymentsController",
    "Method": "GetPaymentsByReservationId",
    "RelativePath": "api/Payments/reservation/{reservationId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "reservationId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "PaymentsController",
    "Method": "AddPaymentByTinyHouseId",
    "RelativePath": "api/Payments/tinyhouse/{tinyHouseId}",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "tinyHouseId",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "payment",
        "Type": "backend.Models.Payment",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "backend.Controllers.RegisterController",
    "Method": "Register",
    "RelativePath": "api/Register/register",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "user",
        "Type": "backend.Models.Users2DTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Minik.Server.Controllers.ReservationsController",
    "Method": "Post",
    "RelativePath": "api/Reservations",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "reservation",
        "Type": "backend.Models.Reservation",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Minik.Server.Controllers.ReservationsController",
    "Method": "Delete",
    "RelativePath": "api/Reservations/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Minik.Server.Controllers.ReservationsController",
    "Method": "UpdateReservation",
    "RelativePath": "api/Reservations/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "updatedReservation",
        "Type": "backend.Models.Reservation",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Minik.Server.Controllers.ReservationsController",
    "Method": "GetAllReservations",
    "RelativePath": "api/Reservations/all",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Minik.Server.Controllers.ReservationsController",
    "Method": "GetReservationsByTinyHouseId",
    "RelativePath": "api/Reservations/tinyhouse/{tinyHouseId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "tinyHouseId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Minik.Server.Controllers.ReservationsController",
    "Method": "UpdateStatus",
    "RelativePath": "api/Reservations/updatestatus/{id}",
    "HttpMethod": "PATCH",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "newStatus",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Minik.Server.Controllers.ReservationsController",
    "Method": "GetReservationsByUserId",
    "RelativePath": "api/Reservations/user/{userId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "userId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Minik.Server.Controllers.ReviewsController",
    "Method": "AddReview",
    "RelativePath": "api/Reviews",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "review",
        "Type": "backend.Models.Review",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Minik.Server.Controllers.ReviewsController",
    "Method": "DeleteReview",
    "RelativePath": "api/Reviews/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Minik.Server.Controllers.ReviewsController",
    "Method": "GetReviewsByTinyHouse",
    "RelativePath": "api/Reviews/tinyhouse/{tinyHouseId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "tinyHouseId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Minik.Server.Controllers.ReviewsController",
    "Method": "UpdateRatingAndComment",
    "RelativePath": "api/Reviews/updateratingcomment/{id}",
    "HttpMethod": "PATCH",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "updatedFields",
        "Type": "backend.Models.Review",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Minik.Server.Controllers.ReviewsController",
    "Method": "GetReviewsByFullName",
    "RelativePath": "api/Reviews/user/fullname/{fullName}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "fullName",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Minik.Server.Controllers.SupportTicketsController",
    "Method": "GetAllTickets",
    "RelativePath": "api/SupportTickets",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Minik.Server.Controllers.SupportTicketsController",
    "Method": "CreateTicket",
    "RelativePath": "api/SupportTickets",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "ticket",
        "Type": "backend.Models.SupportTicket",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Minik.Server.Controllers.SupportTicketsController",
    "Method": "GetTicketById",
    "RelativePath": "api/SupportTickets/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Minik.Server.Controllers.SupportTicketsController",
    "Method": "UpdateTicket",
    "RelativePath": "api/SupportTickets/{id}",
    "HttpMethod": "PATCH",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "update",
        "Type": "backend.Models.SupportTicket",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Minik.Server.Controllers.SupportTicketsController",
    "Method": "DeleteTicket",
    "RelativePath": "api/SupportTickets/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Minik.Server.Controllers.SystemSettingsController",
    "Method": "GetAllSettings",
    "RelativePath": "api/SystemSettings",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Minik.Server.Controllers.SystemSettingsController",
    "Method": "CreateSetting",
    "RelativePath": "api/SystemSettings",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "setting",
        "Type": "backend.Models.SystemSetting",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Minik.Server.Controllers.SystemSettingsController",
    "Method": "GetSettingById",
    "RelativePath": "api/SystemSettings/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Minik.Server.Controllers.SystemSettingsController",
    "Method": "UpdateSetting",
    "RelativePath": "api/SystemSettings/{id}",
    "HttpMethod": "PATCH",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "update",
        "Type": "backend.Models.SystemSetting",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Minik.Server.Controllers.SystemSettingsController",
    "Method": "DeleteSetting",
    "RelativePath": "api/SystemSettings/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Minik.Server.Controllers.SystemSettingsController",
    "Method": "GetSettingsByCategory",
    "RelativePath": "api/SystemSettings/category/{category}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "category",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Minik.Server.Controllers.TinyHousesController",
    "Method": "GetTinyHouses",
    "RelativePath": "api/TinyHouses",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[backend.Models.TinyHouse, backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "Minik.Server.Controllers.TinyHousesController",
    "Method": "GetTinyHouse",
    "RelativePath": "api/TinyHouses/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "backend.Models.TinyHouse",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "Minik.Server.Controllers.TinyHousesController",
    "Method": "AddTinyHouse",
    "RelativePath": "api/TinyHouses/add",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "dto",
        "Type": "backend.Models.TinyHousesDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Minik.Server.Controllers.TinyHousesController",
    "Method": "GetTinyHouseByPropertyOwnerId",
    "RelativePath": "api/TinyHouses/by-owner/{property_owner_id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "property_owner_id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.List\u00601[[backend.Models.TinyHouse, backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "Minik.Server.Controllers.TinyHousesController",
    "Method": "GetTinyHousesPaged",
    "RelativePath": "api/TinyHouses/catalog",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "page",
        "Type": "System.Int32",
        "IsRequired": false
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[backend.Models.TinyHouse, backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "Minik.Server.Controllers.TinyHousesController",
    "Method": "DeleteTinyHouse",
    "RelativePath": "api/TinyHouses/delete/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Minik.Server.Controllers.TinyHousesController",
    "Method": "GetTinyHousesPaged",
    "RelativePath": "api/TinyHouses/paged",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "offset",
        "Type": "System.Int32",
        "IsRequired": false
      },
      {
        "Name": "limit",
        "Type": "System.Int32",
        "IsRequired": false
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[backend.Models.TinyHouse, backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "Minik.Server.Controllers.TinyHousesController",
    "Method": "PatchTinyHouse",
    "RelativePath": "api/TinyHouses/update/{id}",
    "HttpMethod": "PATCH",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "update",
        "Type": "backend.Models.TinyHousesDTO2",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Minik.Server.Controllers.UserController",
    "Method": "DeleteUser",
    "RelativePath": "api/User/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Minik.Server.Controllers.UserController",
    "Method": "UpdateEmail",
    "RelativePath": "api/User/email/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "email",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Minik.Server.Controllers.UserController",
    "Method": "UpdateFullName",
    "RelativePath": "api/User/fullname/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "fullName",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Minik.Server.Controllers.UserController",
    "Method": "Login",
    "RelativePath": "api/User/login",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "loginRequest",
        "Type": "backend.Models.Login",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Minik.Server.Controllers.UserController",
    "Method": "UpdatePassword",
    "RelativePath": "api/User/password/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "password",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Minik.Server.Controllers.UserController",
    "Method": "UpdatePhoneNumber",
    "RelativePath": "api/User/phonenumber/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "phoneNumber",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Minik.Server.Controllers.UserController",
    "Method": "UpdateUserRole",
    "RelativePath": "api/User/role/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "roleId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Minik.Server.Controllers.UserController",
    "Method": "PatchUser",
    "RelativePath": "api/User/update/{inputEmail}",
    "HttpMethod": "PATCH",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "inputEmail",
        "Type": "System.String",
        "IsRequired": true
      },
      {
        "Name": "update",
        "Type": "backend.Models.UsersPatchDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Minik.Server.Controllers.UserController",
    "Method": "GetUserById",
    "RelativePath": "api/User/user/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "backend.Models.UserDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "Minik.Server.Controllers.UserController",
    "Method": "GetAllUsers",
    "RelativePath": "api/User/users",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.List\u00601[[backend.Models.UserDto, backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "Minik.Server.Controllers.UserController",
    "Method": "GetUserByEmail",
    "RelativePath": "api/User/users/{email}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "email",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "backend.Models.UserDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "Minik.Server.Controllers.UserController",
    "Method": "UpdateUser",
    "RelativePath": "api/User/users/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "updatedUser",
        "Type": "backend.Models.Users2DTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  }
]